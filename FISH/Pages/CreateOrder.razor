@page "/"
@using FISH.Model
@using FISH.Shared.Component
@using System.Diagnostics.CodeAnalysis
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject IHttpClientFactory HttpClientFactory
@inject ILocalStorageService localStorage
@inject SwalService SwalService
@inject IHttpContextAccessor httpContextAccessor 


<style>
    input {
        font-size: smaller;
    }

</style>
<PageTitle>凱生魚片訂購網-訂購頁</PageTitle>

<EditForm Model="dailyOrder" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @* <div class="row"> *@
@*         <div class="col-6  col-md-6">
            <div class="row mb-3">
                <label class="col-12 col-form-label">訂單編號</label>
                <div class="col-12">
                    <BootstrapInput id="Id" IsDisabled="true" class="form-control disabled inputtxt" @bind-Value="@dailyOrder.Id" />
                </div>
            </div>
        </div> *@
        @* <div class="col-6 col-md-6">
            <div class="row mb-3">
                <label class="col-12 col-form-label">建單時間</label>
                <div class="col-12 disabled">
                    <DateTimePicker class="inputtxt" ViewMode="DatePickerViewMode.DateTime" Value="@dailyOrder.OrderCreateDateTime" DateTimeFormat="yyyy-MM-dd HH:mm" OnValueChanged="OnOrderCreateDateTimeChanged">
                        <TimePickerSetting ShowClockScale="true" ShowSecond="false" ShowMinute="true" IsAutoSwitch="false" />
                    </DateTimePicker>
                </div>
            </div>
        </div> *@
    @* </div> *@
    <div class="row">
        <div class="col-6 col-md-6">
            <div class="row mb-3">
                <label class="col-12 col-form-label">姓名</label>
                <div class="col-12">
                    <InputText id="Name" class="form-control inputtxt" @bind-Value="dailyOrder.Name" />
                </div>
            </div>
        </div>
        <div class="col-6 col-md-6">
            <div class="row mb-3">
                <label class="col-12 col-form-label">連絡電話</label>
                <div class="col-12">
                    <InputText id="ContactNumber" class="form-control inputtxt" @bind-Value="dailyOrder.ContactNumber" />
                </div>
            </div>
        </div>

        <div class="col-6 col-md-3">
            <div class="row mb-3">
                <label class="col-12 col-form-label">自取時間</label>
                <div class="col-12">
                    <DateTimePicker style="font-size:smaller" class="inputtxt" ViewMode="DatePickerViewMode.DateTime" Value="@dailyOrder.GetMySelfDateTime" DateTimeFormat="yyyy-MM-dd" OnValueChanged="OnGetMySelfDateTimeChanged">
                        <TimePickerSetting ShowClockScale="true" ShowSecond="false" ShowMinute="false" IsAutoSwitch="false" />
                    </DateTimePicker>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="row mb-3">
                <label class="col-12 col-form-label">訂單類型</label>
                <div class="col-12">
                    <select id="OrderType" class="form-control  inputtxt" @bind="dailyOrder.OrderType">
                        <option value="每日拼盤">每日拼盤</option>
                        <option value="自訂拼盤">自訂拼盤</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="row mb-3">
                <label class="col-12 col-form-label">交貨時間</label>
                <div class="col-12 disabled">
                    <DateTimePicker class="inputtxt" ViewMode="DatePickerViewMode.DateTime" Value="@dailyOrder.DeliveryTime" DateTimeFormat="yyyy-MM-dd" OnValueChanged="DeliveryTimeChanged">
                        <TimePickerSetting ShowClockScale="true" ShowSecond="false" ShowMinute="false" IsAutoSwitch="false" />
                    </DateTimePicker>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="row mb-3">
                <label class="col-12 col-form-label">交貨方法</label>
                <div class="col-12">
                    <select id="DeliveryMethod" class="form-control inputtxt" @bind="dailyOrder.DeliveryMethod">
                        <option value="定點取">定點取</option>
                        <option value="外送 【僅限青埔】">外送 【僅限青埔】</option>
                        <option value="自取">自取</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    @if (dailyOrder.DeliveryMethod == "定點取")
    {
        <div class="row mb-3">
            <label class="col-12 col-form-label">選擇地區</label>
            <select id="DeliverRegion" class="form-control inputtxt" @bind="DilyverRegion">
                <option>青埔地區</option>
                <option>大園地區</option>
                <option>過嶺地區</option>
                <option>大竹地區</option>
            </select>
        </div>
    }
    else if (dailyOrder.DeliveryMethod == "自取")
    {
        DilyverRegion = "";
        dailyOrder.DeliveryAddress = "皇家八街２號";
    }
    else if (dailyOrder.DeliveryMethod == "外送 【僅限青埔】")
    {
        if (dailyOrder.DeliveryAddress == "")
        {
            DilyverRegion = "";
            dailyOrder.DeliveryAddress = "";
        }
    }
    else
    {
        DilyverRegion = "";
        dailyOrder.DeliveryAddress = "";
    }
    <div class="col-12">
        <label class="col-12 col-form-label">訂單地址</label>
        <div class="col-12">
 
            @if (DilyverRegion == "青埔地區")
            {
                dailyOrder.DeliveryAddress = "皆可外送至指定社區管理室";
            }
            else if(DilyverRegion == "大園地區")
            {
                dailyOrder.DeliveryAddress = "大觀路20號彩卷行（仁壽宮旁）";
            }
            else if(DilyverRegion == "過嶺地區")
            {
                dailyOrder.DeliveryAddress = "民族路五段326號（全家高嶺店）";
            }
            else if(DilyverRegion == "大竹地區")
            {
                dailyOrder.DeliveryAddress = "上竹四街53號";
            }   
            <InputText @bind-Value="dailyOrder.DeliveryAddress" class="form-control  inputtxt" />
        </div>
    </div>

    <div class="col-12 mb-3">
        <label class="col-12 col-form-label">訂單明細</label>
        <div class="col-12">
            <InputTextArea id="OrderDetail" style="height:300px" class="form-control inputtxt" @bind-Value="dailyOrder.OrderDetail" disabled />
        </div>
    </div>

    <div class="col-12 mb-2">
        <div class="row g-3">
            <div class="col-5 col-sm-5">
                <BootstrapInputGroup>
                    <BootstrapInputGroupLabel DisplayText="品項" />
                    <BootstrapInput @bind-Value="@FishName" />
                </BootstrapInputGroup>
            </div>
            <div class="col-7 col-sm-7">
                <BootstrapInputGroup>
                    <BootstrapInput  @bind-Value="@FishAmount"  PlaceHolder="金額" />
                    <Button OnClick="@AddFish">加入 </Button>
                    <Button OnClick="@ClearFish" Color="Color.Danger">清除</Button>
                </BootstrapInputGroup>
            </div>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-12 col-form-label">訂單總金額</label>
        <div class="col-12">
            <InputNumber id="OrderAmount" class="form-control  inputtxt" @bind-Value="dailyOrder.OrderAmount" disabled />
        </div>
    </div>

    <div class="row mb-3">
        <label class="col-12 col-form-label">付款方式</label>
        <div class="col-12">
            <select id="PricingMethod" class="form-control inputtxt" @bind="dailyOrder.PricingMethod">
                <option value="現金">現金</option>
                <option value="匯款">匯款</option>
            </select>

            @if (dailyOrder.PricingMethod == "匯款")
            {
                <div class="row mb-3">
                    <label class="col-12 col-form-label">銀行代號</label>
                    <div class="col-12">
                        <BootstrapLabel id="BankAccount" class="form-control" Value="聯邦銀行  803" />
                    </div>
                    <label class="col-12 col-form-label">匯款帳號</label>
                    <div class="col-12">
                        <BootstrapLabel id="BankAccount" class="form-control" Value="007501048173" />
                    </div>
                </div>
            }
           @*  <InputText id="PricingMethod" class="form-control  inputtxt" @bind-Value="dailyOrder.PricingMethod" disabled /> *@
        </div>
    </div>

   @*  <div class="row mb-3 Visibility">
        <label class="col-12 col-form-label">是否已刪除</label>
        <div class="col-12">
            <InputCheckbox id="IsDeleted" class="form-check-input" @bind-Value="dailyOrder.IsDeleted" />
        </div>
    </div>

    <div class="row mb-3 Visibility">
        <label class="col-12 col-form-label">是否已選擇</label>
        <div class="col-12">
            <InputCheckbox id="IsSeleted" class="form-check-input" @bind-Value="dailyOrder.IsSeleted" />
        </div>
    </div>

    <div class="row mb-3 Visibility">
        <label class="col-12 col-form-label">是否已打印</label>
        <div class="col-12">
            <InputCheckbox id="IsPrinted" class="form-check-input" @bind-Value="dailyOrder.IsPrinted" />
        </div>
    </div>

    <div class="row mb-3 Visibility">
        <label class="col-12 col-form-label">是否已交貨</label>
        <div class="col-12">
            <InputCheckbox id="IsDelivered" class="form-check-input" @bind-Value="dailyOrder.IsDelivered" />
        </div>
    </div>

    <div class="row mb-3 Visibility">
        <label class="col-12 col-form-label">是否已支付</label>
        <div class="col-12">
            <InputCheckbox id="IsPaid" class="form-check-input" @bind-Value="dailyOrder.IsPaid" />
        </div>
    </div> *@

    @* 修改提交按鈕的行為 *@
@*     <div class="row mb-3 Visibility">
        <label class="col-12 col-form-label">驗證碼</label>
        <div class="col-12">
            <img class="mb-2" src="/Captcha/GenerateCaptcha" alt="Captcha" />
            <InputText id="CaptchaInput" class="form-control" @bind-Value="captchaInput" />
        </div>
    </div> *@

    <div class="row mb-3 Visibility">
        <div class="col-12 offset2">
            <Button IsAsync="true" type="submit" IsDisabled="@isEnable" class="btn btn-primary" OnClick="HandleValidSubmit">提交</Button>
        </div>
    </div>

</EditForm>
@* @if (showCaptchaModal)
{
    <div class="modal" tabindex="-1" style="display:block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">圖形驗證</h5>
                    <button type="button" class="btn-close" @onclick="() => showCaptchaModal = false"></button>
                </div>
                <div class="modal-body">
                    <p>請輸入下方圖片中的數字：</p>
                    
                    <img src="captchaImageUrl" alt="圖形驗證碼" />
                    <InputText @bind-Value="captchaInput" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="() => VerifyCaptcha(captchaInput)">驗證</button>
                </div>
            </div>
        </div>
    </div>
}
 *@
@* @if (showCaptchaModal)
{
    <div class="modal"  tabindex="1" style="display:block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">機器人驗證</h5>
                    <button type="button" class="btn-close" @onclick="() => showCaptchaModal = false"></button>
                </div>
                <div class="modal-body">
                    <Verification OnValidAsync="HandleCaptchaValid" />
                </div>
            </div>
        </div>
    </div>
} *@
@* 在模態對話框中顯示驗證碼圖片 *@
@* @if (showCaptchaModal)
{
    <div class="modal" tabindex="-1" style="display:block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">圖形驗證</h5>
                    <button type="button" class="btn-close" @onclick="() => showCaptchaModal = false"></button>
                </div>
                <div class="modal-body">
                    <p>請輸入下方圖片中的數字：</p>
                    <img src="/Captcha/GenerateCaptcha" alt="圖形驗證碼" />
                    <InputText @bind-Value="captchaInput" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="() => VerifyCaptcha(captchaInput)">驗證</button>
                </div>
            </div>
        </div>
    </div>
}
 *@

@code {
    private bool isEnable { get; set; } = false;
    private Orders dailyOrder = new()
    {
        OrderType = "每日拼盤",
        OrderCreateDateTime = DateTime.Now.AddHours(8),
            GetMySelfDateTime = DateTime.Now.AddHours(8),
            DeliveryTime = DateTime.Now.AddHours(8),
        DeliveryMethod = "定點取",
        DeliveryAddress = "皆可外送至指定社區管理室",
    };

    private async Task ShowAutoCloseSwal(SwalCategory aSwalCategory , string aOrderMessage, string aOrderId)
    {
        var op = new SwalOption()
            {
                Category = aSwalCategory,
                Title = aOrderMessage,
                Content = "訂單編號" + aOrderId + "(請紀錄)",
                ShowFooter = true,
                IsAutoHide = false,
                Delay = 3000000,
            };
        await SwalService.Show(op);
    }



    private string? GetCaptchaCode { get; set; } = "";

    private string? captchaInput;

    private string? captchaImageUrl;

    private bool showCaptchaModal = false;

    [Inject]
    [NotNull]
    private ToastService? ToastService { get; set; }

    [Parameter]
    public string? DilyverRegion { get; set; }

    [Parameter]
    public string? FishName { get; set; }

    [Parameter]
    [Range(0, 100000000)]
    public string FishAmount { get; set; } = "";

    [Inject]
    [NotNull]
    private NavigationManager? NavigationManager { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var httpClient = HttpClientFactory.CreateClient("FishServerAPI");

        await LoadCaptchaImageAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {



        }
    }

    private async Task LoadCaptchaImageAsync()
    {

        StateHasChanged(); // 通知Blazor更新UI
    }
    // private async Task ShowCaptchaModal()
    // {
    //     // this.showCaptchaModal = true;
    //     // await Task.CompletedTask;

    //     this.showCaptchaModal = true;
    //     await LoadCaptchaImage();

    // }


    private async Task HandleCaptchaValid(bool isValid)
    {
        if (isValid)
        {
            this.showCaptchaModal = false;
            await HandleValidSubmit(); // 當驗證碼通過後，執行原本的提交邏輯
        }
        else
        {
            // 驗證碼驗證失敗，保持模態對話框開啟，讓用戶重試
            this.showCaptchaModal = true;
        }
    }

    private async Task<bool> VerifyCaptcha(string inputCaptcha)
    {
        // 調用後端API驗證輸入的驗證碼是否正確
        var captchaCode = localStorage.GetItemAsStringAsync("CaptchaCode").Result;//httpContextAccessor?.HttpContext?.Session.GetString("CaptchaCode");
                                                                                  // var captchaCode = await localStorage.GetItemAsStringAsync("CaptchaCode");
        if (captchaCode == inputCaptcha)
        {
            // 驗證碼正確
            showCaptchaModal = false;
            return true;
        }
        else
        {
            // 驗證碼錯誤
            await ToastService.Error("驗證碼錯誤", "請重新輸入驗證碼");
            return false;
        }
    }

    private async Task ShowCaptchaModal()
    {
        this.showCaptchaModal = true;
        await LoadCaptchaImage();
    }

    private async Task LoadCaptchaImage()
    {
        // 假設後端API接口為 "/api/captcha"，這裡調用該接口獲取圖形驗證碼圖片的URL
        var httpClient = HttpClientFactory.CreateClient("FishServerAPI");
        captchaImageUrl = await httpClient.GetStringAsync("api/captcha");
        StateHasChanged(); // 通知Blazor更新UI
    }

    private async Task HandleValidSubmit()
    {
        isEnable = true;
        // 在这里处理表单提交，例如将数据发送到服务器
        var httpClient = HttpClientFactory.CreateClient("FishServerAPI");
        var response = await httpClient.PostAsJsonAsync("api/order", dailyOrder);
        if (response.IsSuccessStatusCode)
        {
            // 提交成功后的处理
            await ShowAutoCloseSwal(SwalCategory.Success, $"訂單完成", $"{ response.Headers.Location.Segments[3]}");
            NavigationManager.NavigateTo("/AtentionPage");
        }
        else
        {
            // 提交失败后的处理
            await ShowAutoCloseSwal(SwalCategory.Error, "表單填寫有誤","");
        }

        isEnable = false;

    }

    private async Task OnOrderCreateDateTimeChanged(DateTime adateTime)
    {
        // 這裡實現當日期時間選擇器的值改變時的邏輯
        dailyOrder.OrderCreateDateTime = adateTime;
        await Task.CompletedTask; // 假設這裡有異步操作
                                  // 你可能需要根據 e.Value 來更新 order.OrderCreateDateTime 或進行其他操作
    }

    private async Task OnGetMySelfDateTimeChanged(DateTime adateTime)
    {
        dailyOrder.GetMySelfDateTime = adateTime;
        await Task.CompletedTask; // 假設這裡有異步操作
    }

    private async Task DeliveryTimeChanged(DateTime adateTime)
    {
        dailyOrder.DeliveryTime = adateTime;
        await Task.CompletedTask; // 假設這裡有異步操作
    }


    private async Task AddFish()
    {
        if (!String.IsNullOrEmpty(FishName) & !String.IsNullOrEmpty(FishAmount))
        {
            
            var aresult =  int.TryParse(FishAmount, out int amount);
            
            if (aresult)
            {
                dailyOrder.OrderDetail += $"{FishName}={FishAmount};\n";
                dailyOrder.OrderAmount += amount;
                FishName = "";
                FishAmount = "";

            }
            else
            {
                FishAmount = "";
                await ToastService.Error("輸入錯誤", "魚種與金額皆須填寫!!");
            }

        }
        else
        {
            FishName = "";
            FishAmount = "";
            await ToastService.Error("輸入錯誤","魚種與金額皆須填寫!!");
        }

    }

    private async Task ClearFish()
    {
        dailyOrder.OrderAmount = 0;
        dailyOrder.OrderDetail = "";

    }

}